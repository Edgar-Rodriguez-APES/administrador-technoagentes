service: administrador-technoagentes

frameworkVersion: '3'

custom:
  treliPrices:
    basic: price_basic_example
    standard: price_standard_example
    premium: price_premium_example

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment:
    ENVIRONMENT: ${self:provider.stage}
    TENANTS_TABLE: !Ref TenantsTable
    USERS_TABLE: !Ref UsersTable

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource:
            - !GetAtt TenantsTable.Arn
            - !GetAtt UsersTable.Arn
            - !Join ['', [!GetAtt TenantsTable.Arn, '/index/*']]
            - !Join ['', [!GetAtt UsersTable.Arn, '/index/*']]

plugins:
  - serverless-iam-roles-per-function

package:
  exclude:
  #  - node_modules/aws-sdk/**
    - '**/*.md'
    - '**/*.txt'
    - deploy-temp/**
    - docs/**
    - tests/**
    - infrastructure/**
    - simple-infra/**
    - dist/**
    - undefined/**
    - '**/amplify*.json'
    - '**/api-*.json'
    - '**/deploy-*.ps1'
    - '**/deploy-*.sh'
    - '**/*.zip'
  excludeDevDependencies: true
  
functions:
  # Tenant Users API
  getTenantUsers:
    handler: src/api/tenant-users-handler.handler
    iamRoleStatementsName: get-users-role
    events:
      - http:
          path: tenants/users
          method: get

  createTenantUser:
    handler: src/api/tenant-users-handler.handler
    iamRoleStatementsName: create-user-role
    events:
    - http:
        path: tenants/users
        method: post

  updateTenantUser:
    handler: src/api/tenant-users-handler.handler
    iamRoleStatementsName: update-user-role
    events:
      - http:
          path: tenants/users/{id}
          method: put

  deleteTenantUser:
    handler: src/api/tenant-users-handler.handler
    iamRoleStatementsName: delete-user-role
    events:
      - http:
          path: tenants/users/{id}
          method: delete

  startTenantOnboarding:
    handler: src/onboarding/onboarding-api-handler.handler
    iamRoleStatementsName: onboarding-role
    events:
      - http:
          path: onboarding
          method: post

  checkTCAcceptance:
    handler: src/api/tc-acceptance-handler.handler
    iamRoleStatementsName: check-tc-role
    events:
      - http:
          path: tc-acceptance
          method: get

  recordTCAcceptance:
    handler: src/api/tc-acceptance-handler.handler
    iamRoleStatementsName: record-tc-role
    events:
      - http:
          path: tc-acceptance
          method: post

  paymentWebhook:
    handler: src/api/webhook-handler.handler
    iamRoleStatementsName: webhook-role
    events:
      - http:
          path: webhooks/payment
          method: post
resources:
  Resources:
    # DynamoDB Tables
    TenantsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-tenants-${self:provider.stage}-v2
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: tenantId
            AttributeType: S
          - AttributeName: status
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
        KeySchema:
          - AttributeName: tenantId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: StatusIndex
            KeySchema:
              - AttributeName: status
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-users-${self:provider.stage}-v2
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: GSI1PK
            AttributeType: S
          - AttributeName: GSI1SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: GSI1
            KeySchema:
              - AttributeName: GSI1PK
                KeyType: HASH
              - AttributeName: GSI1SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
